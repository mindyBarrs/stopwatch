{"ast":null,"code":"var _jsxFileName = \"/Users/mindybarrs/Documents/Code Improvements/stopwatch/src/index.tsx\";\nimport React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formattedSeconds = sec => Math.floor(sec / 60) + \":\" + (\"0\" + sec % 60).slice(-2);\n\n/*\n *\n *  The following are the issues with the code\n *   - ClassAttributes isn't need, unless we are going to access the components ref\n *\n */\n\n/*\n *\n *  The following are the issues with the code\n *   - laps should be initialized in the constructor,\n *     and incrementer should be initialized in the state\n *   - All of the handle... aren't boud to this class which will,\n *     cause an runtime errors when the classes are invoked.\n *   - handleDeleteClick is missing the closing bracket, which will cause a sytx error\n *   - render method is missing the closing bracket, which will cause a syntax error\n *   - The return statement is outside of the render method, which will cause a syntax error\n *   - The use if any type does defeat the purpose of using TypeScript\n *\n */\nclass Stopwatch extends Component {\n  constructor(props) {\n    super(props);\n    this.incrementer = null;\n    this.state = {\n      secondsElapsed: props.initialSeconds,\n      lastClearedIncrementer: null,\n      laps: []\n    };\n    this.handleStartClick = this.handleStartClick.bind(this);\n    this.handleStopClick = this.handleStopClick.bind(this);\n    this.handleResetClick = this.handleResetClick.bind(this);\n    this.handleLabClick = this.handleLabClick.bind(this);\n    this.handleDeleteClick = this.handleDeleteClick.bind(this);\n  }\n  handleStartClick() {\n    this.incrementer = setInterval(() => this.setState({\n      secondsElapsed: this.state.secondsElapsed + 1\n    }), 1000);\n  }\n  handleStopClick() {\n    if (this.incrementer !== null) {\n      clearInterval(this.incrementer);\n    }\n    this.setState({\n      lastClearedIncrementer: this.incrementer\n    });\n  }\n  handleResetClick() {\n    clearInterval(this.incrementer);\n    this.setState({\n      secondsElapsed: 0,\n      laps: []\n    });\n  }\n  handleLabClick() {\n    this.setState(prevState => ({\n      laps: prevState.laps.concat([prevState.secondsElapsed])\n    }));\n  }\n  handleDeleteClick(index) {\n    return () => {\n      this.setState(prevState => ({\n        laps: prevState.laps.filter((_, i) => i !== index)\n      }));\n    };\n  }\n  render() {\n    const {\n      secondsElapsed,\n      lastClearedIncrementer\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stopwatch\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"stopwatch-timer\",\n        children: formattedSeconds(secondsElapsed)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 5\n      }, this), secondsElapsed === 0 || this.incrementer === lastClearedIncrementer ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"start-btn\",\n        onClick: this.handleStartClick,\n        children: \"start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 6\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"stop-btn\",\n        onClick: this.handleStopClick,\n        children: \"stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 6\n      }, this), secondsElapsed !== 0 && this.incrementer !== lastClearedIncrementer ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: this.handleLabClick,\n        children: \"lap\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 6\n      }, this) : null, secondsElapsed !== 0 && this.incrementer === lastClearedIncrementer ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: this.handleResetClick,\n        children: \"reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 6\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stopwatch-laps\",\n        children: this.state.laps && this.state.laps.map((lap, i) => /*#__PURE__*/_jsxDEV(Lap, {\n          index: i + 1,\n          lap: lap,\n          onDelete: this.handleDeleteClick(i)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 8\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 4\n    }, this);\n  }\n}\n\n/*\n *\n *  The following are the issues with the code\n *  - OnDelete is typed as a () => {} which implies that it returns an empty object,\n *    but it should be a function that returns void\n *\n */\nconst Lap = props => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"stopwatch-lap\",\n  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n    children: props.index\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 3\n  }, this), \"/ \", formattedSeconds(props.lap), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: props.onDelete,\n    children: \" X \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 3\n  }, this)]\n}, props.index, true, {\n  fileName: _jsxFileName,\n  lineNumber: 154,\n  columnNumber: 2\n}, this);\n_c = Lap;\nconst container = document.getElementById(\"root\");\nconst root = createRoot(container);\nroot.render(/*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(Stopwatch, {\n    initialSeconds: 0\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 3\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 163,\n  columnNumber: 2\n}, this));\nvar _c;\n$RefreshReg$(_c, \"Lap\");","map":{"version":3,"names":["React","createRoot","Component","jsxDEV","_jsxDEV","formattedSeconds","sec","Math","floor","slice","Stopwatch","constructor","props","incrementer","state","secondsElapsed","initialSeconds","lastClearedIncrementer","laps","handleStartClick","bind","handleStopClick","handleResetClick","handleLabClick","handleDeleteClick","setInterval","setState","clearInterval","prevState","concat","index","filter","_","i","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","map","lap","Lap","onDelete","_c","container","document","getElementById","root","StrictMode","$RefreshReg$"],"sources":["/Users/mindybarrs/Documents/Code Improvements/stopwatch/src/index.tsx"],"sourcesContent":["import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport { Component } from \"react\";\n\nconst formattedSeconds = (sec: number) =>\n\tMath.floor(sec / 60) + \":\" + (\"0\" + (sec % 60)).slice(-2);\n\n/*\n *\n *  The following are the issues with the code\n *   - ClassAttributes isn't need, unless we are going to access the components ref\n *\n */\ninterface StopwatchProps {\n\tinitialSeconds: number;\n}\n\ninterface StopwatchState {\n\tlaps: number[];\n\tsecondsElapsed: number;\n\tlastClearedIncrementer: NodeJS.Timeout | null;\n}\n\n/*\n *\n *  The following are the issues with the code\n *   - laps should be initialized in the constructor,\n *     and incrementer should be initialized in the state\n *   - All of the handle... aren't boud to this class which will,\n *     cause an runtime errors when the classes are invoked.\n *   - handleDeleteClick is missing the closing bracket, which will cause a sytx error\n *   - render method is missing the closing bracket, which will cause a syntax error\n *   - The return statement is outside of the render method, which will cause a syntax error\n *   - The use if any type does defeat the purpose of using TypeScript\n *\n */\nclass Stopwatch extends Component<StopwatchProps, StopwatchState> {\n\tincrementer: NodeJS.Timeout | null = null;\n\n\tconstructor(props: StopwatchProps) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tsecondsElapsed: props.initialSeconds,\n\t\t\tlastClearedIncrementer: null,\n\t\t\tlaps: [],\n\t\t};\n\n\t\tthis.handleStartClick = this.handleStartClick.bind(this);\n\t\tthis.handleStopClick = this.handleStopClick.bind(this);\n\t\tthis.handleResetClick = this.handleResetClick.bind(this);\n\t\tthis.handleLabClick = this.handleLabClick.bind(this);\n\t\tthis.handleDeleteClick = this.handleDeleteClick.bind(this);\n\t}\n\n\thandleStartClick() {\n\t\tthis.incrementer = setInterval(\n\t\t\t() =>\n\t\t\t\tthis.setState({\n\t\t\t\t\tsecondsElapsed: this.state.secondsElapsed + 1,\n\t\t\t\t}),\n\t\t\t1000\n\t\t);\n\t}\n\n\thandleStopClick() {\n\t\tif (this.incrementer !== null) {\n\t\t\tclearInterval(this.incrementer);\n\t\t}\n\t\tthis.setState({\n\t\t\tlastClearedIncrementer: this.incrementer,\n\t\t});\n\t}\n\n\thandleResetClick() {\n\t\tclearInterval(this.incrementer);\n\n\t\tthis.setState({\n\t\t\tsecondsElapsed: 0,\n\t\t\tlaps: [],\n\t\t});\n\t}\n\n\thandleLabClick() {\n\t\tthis.setState((prevState) => ({\n\t\t\tlaps: prevState.laps.concat([prevState.secondsElapsed]),\n\t\t}));\n\t}\n\n\thandleDeleteClick(index: number) {\n\t\treturn () => {\n\t\t\tthis.setState((prevState) => ({\n\t\t\t\tlaps: prevState.laps.filter((_, i) => i !== index),\n\t\t\t}));\n\t\t};\n\t}\n\n\trender() {\n\t\tconst { secondsElapsed, lastClearedIncrementer } = this.state;\n\n\t\treturn (\n\t\t\t<div className=\"stopwatch\">\n\t\t\t\t<h1 className=\"stopwatch-timer\">{formattedSeconds(secondsElapsed)}</h1>\n\t\t\t\t{secondsElapsed === 0 || this.incrementer === lastClearedIncrementer ? (\n\t\t\t\t\t<button\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tclassName=\"start-btn\"\n\t\t\t\t\t\tonClick={this.handleStartClick}\n\t\t\t\t\t>\n\t\t\t\t\t\tstart\n\t\t\t\t\t</button>\n\t\t\t\t) : (\n\t\t\t\t\t<button\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tclassName=\"stop-btn\"\n\t\t\t\t\t\tonClick={this.handleStopClick}\n\t\t\t\t\t>\n\t\t\t\t\t\tstop\n\t\t\t\t\t</button>\n\t\t\t\t)}\n\t\t\t\t{secondsElapsed !== 0 && this.incrementer !== lastClearedIncrementer ? (\n\t\t\t\t\t<button type=\"button\" onClick={this.handleLabClick}>\n\t\t\t\t\t\tlap\n\t\t\t\t\t</button>\n\t\t\t\t) : null}\n\t\t\t\t{secondsElapsed !== 0 && this.incrementer === lastClearedIncrementer ? (\n\t\t\t\t\t<button type=\"button\" onClick={this.handleResetClick}>\n\t\t\t\t\t\treset\n\t\t\t\t\t</button>\n\t\t\t\t) : null}\n\t\t\t\t<div className=\"stopwatch-laps\">\n\t\t\t\t\t{this.state.laps &&\n\t\t\t\t\t\tthis.state.laps.map((lap, i) => (\n\t\t\t\t\t\t\t<Lap\n\t\t\t\t\t\t\t\tindex={i + 1}\n\t\t\t\t\t\t\t\tlap={lap}\n\t\t\t\t\t\t\t\tonDelete={this.handleDeleteClick(i)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n/*\n *\n *  The following are the issues with the code\n *  - OnDelete is typed as a () => {} which implies that it returns an empty object,\n *    but it should be a function that returns void\n *\n */\nconst Lap = (props: { index: number; lap: number; onDelete: () => void }) => (\n\t<div key={props.index} className=\"stopwatch-lap\">\n\t\t<strong>{props.index}</strong>/ {formattedSeconds(props.lap)}{\" \"}\n\t\t<button onClick={props.onDelete}> X </button>\n\t</div>\n);\n\nconst container = document.getElementById(\"root\") as HTMLElement;\nconst root = createRoot(container);\nroot.render(\n\t<React.StrictMode>\n\t\t<Stopwatch initialSeconds={0} />\n\t</React.StrictMode>\n);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}